{"remainingRequest":"/Users/user/Documents/find-user-repo-vue/node_modules/babel-loader/lib/index.js!/Users/user/Documents/find-user-repo-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/user/Documents/find-user-repo-vue/src/common/provider/apollo.js","dependencies":[{"path":"/Users/user/Documents/find-user-repo-vue/src/common/provider/apollo.js","mtime":1577036624931},{"path":"/Users/user/Documents/find-user-repo-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Documents/find-user-repo-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/user/Documents/find-user-repo-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvdXNlci9Eb2N1bWVudHMvZmluZC11c2VyLXJlcG8tdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBWdWVBcG9sbG8gZnJvbSAndnVlLWFwb2xsbyc7CmltcG9ydCB7IGNyZWF0ZUFwb2xsb0NsaWVudCB9IGZyb20gJ3Z1ZS1jbGktcGx1Z2luLWFwb2xsby9ncmFwaHFsLWNsaWVudCc7CmltcG9ydCB7IEluTWVtb3J5Q2FjaGUgfSBmcm9tICdhcG9sbG8tY2FjaGUtaW5tZW1vcnknOwpWdWUudXNlKFZ1ZUFwb2xsbyk7CnZhciBBVVRIX1RPS0VOID0gJ2Fwb2xsby10b2tlbic7CnZhciBHSVRfUFVCTElDX1RPS0VOID0gJzViZWQ0M2RkN2Q1ZGIyYWEwNTRlN2FkZDNmZjc0NmFmNDMwMDc0N2InOwp2YXIgaHR0cEVuZHBvaW50ID0gJyBodHRwczovL2FwaS5naXRodWIuY29tL2dyYXBocWwnOyAvLyBDb25maWcKCnZhciBkZWZhdWx0T3B0aW9ucyA9IHsKICBodHRwRW5kcG9pbnQ6IGh0dHBFbmRwb2ludCwKICB0b2tlbk5hbWU6IEFVVEhfVE9LRU4sCiAgcGVyc2lzdGluZzogZmFsc2UsCiAgd2Vic29ja2V0c09ubHk6IGZhbHNlLAogIHNzcjogZmFsc2UsCiAgY2FjaGU6IG5ldyBJbk1lbW9yeUNhY2hlKHsKICAgIGZyZWV6ZVJlc3VsdHM6IGZhbHNlCiAgfSksCiAgZ2V0QXV0aDogZnVuY3Rpb24gZ2V0QXV0aCgpIHsKICAgIHJldHVybiAnQmVhcmVyICcgKyBwcm9jZXNzLmVudi5HSVRfUFVCTElDX1RPS0VOOwogIH0KfTsKZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVByb3ZpZGVyKCkgewogIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTsKCiAgdmFyIF9jcmVhdGVBcG9sbG9DbGllbnQgPSBjcmVhdGVBcG9sbG9DbGllbnQoX29iamVjdFNwcmVhZCh7fSwgZGVmYXVsdE9wdGlvbnMsIHt9LCBvcHRpb25zKSksCiAgICAgIGFwb2xsb0NsaWVudCA9IF9jcmVhdGVBcG9sbG9DbGllbnQuYXBvbGxvQ2xpZW50LAogICAgICB3c0NsaWVudCA9IF9jcmVhdGVBcG9sbG9DbGllbnQud3NDbGllbnQ7CgogIGFwb2xsb0NsaWVudC53c0NsaWVudCA9IHdzQ2xpZW50OwogIHZhciBhcG9sbG9Qcm92aWRlciA9IG5ldyBWdWVBcG9sbG8oewogICAgZGVmYXVsdENsaWVudDogYXBvbGxvQ2xpZW50LAogICAgZGVmYXVsdE9wdGlvbnM6IHsKICAgICAgJHF1ZXJ5OiB7fQogICAgfSwKICAgIGVycm9ySGFuZGxlcjogZnVuY3Rpb24gZXJyb3JIYW5kbGVyKGVycm9yKSB7CiAgICAgIGNvbnNvbGUubG9nKCdbRXJyb3ItQXBvbGxvXScgKyBlcnJvcik7CiAgICB9CiAgfSk7CiAgcmV0dXJuIGFwb2xsb1Byb3ZpZGVyOwp9"},{"version":3,"sources":["/Users/user/Documents/find-user-repo-vue/src/common/provider/apollo.js"],"names":["Vue","VueApollo","createApolloClient","InMemoryCache","use","AUTH_TOKEN","GIT_PUBLIC_TOKEN","httpEndpoint","defaultOptions","tokenName","persisting","websocketsOnly","ssr","cache","freezeResults","getAuth","process","env","createProvider","options","apolloClient","wsClient","apolloProvider","defaultClient","$query","errorHandler","error","console","log"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,sCAAnC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEAH,GAAG,CAACI,GAAJ,CAAQH,SAAR;AAEA,IAAMI,UAAU,GAAG,cAAnB;AACA,IAAMC,gBAAgB,GAAG,0CAAzB;AACA,IAAMC,YAAY,GAAG,iCAArB,C,CAEA;;AACA,IAAMC,cAAc,GAAG;AACrBD,EAAAA,YAAY,EAAZA,YADqB;AAErBE,EAAAA,SAAS,EAAEJ,UAFU;AAGrBK,EAAAA,UAAU,EAAE,KAHS;AAIrBC,EAAAA,cAAc,EAAE,KAJK;AAKrBC,EAAAA,GAAG,EAAE,KALgB;AAMrBC,EAAAA,KAAK,EAAE,IAAIV,aAAJ,CAAkB;AACvBW,IAAAA,aAAa,EAAE;AADQ,GAAlB,CANc;AAUrBC,EAAAA,OAAO,EAAE,mBAAM;AACb,WAAO,YAAYC,OAAO,CAACC,GAAR,CAAYX,gBAA/B;AACD;AAZoB,CAAvB;AAeA,OAAO,SAASY,cAAT,GAAsC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAAA,4BACRjB,kBAAkB,mBAChDM,cADgD,MAEhDW,OAFgD,EADV;AAAA,MACnCC,YADmC,uBACnCA,YADmC;AAAA,MACrBC,QADqB,uBACrBA,QADqB;;AAK3CD,EAAAA,YAAY,CAACC,QAAb,GAAwBA,QAAxB;AAEA,MAAMC,cAAc,GAAG,IAAIrB,SAAJ,CAAc;AACnCsB,IAAAA,aAAa,EAAEH,YADoB;AAEnCZ,IAAAA,cAAc,EAAE;AACdgB,MAAAA,MAAM,EAAE;AADM,KAFmB;AAOnCC,IAAAA,YAPmC,wBAOtBC,KAPsB,EAOf;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBF,KAA/B;AACD;AATkC,GAAd,CAAvB;AAYA,SAAOJ,cAAP;AACD","sourcesContent":["import Vue from 'vue'\nimport VueApollo from 'vue-apollo'\nimport { createApolloClient } from 'vue-cli-plugin-apollo/graphql-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\n\nVue.use(VueApollo)\n\nconst AUTH_TOKEN = 'apollo-token'\nconst GIT_PUBLIC_TOKEN = '5bed43dd7d5db2aa054e7add3ff746af4300747b'\nconst httpEndpoint = ' https://api.github.com/graphql'\n\n// Config\nconst defaultOptions = {\n  httpEndpoint,\n  tokenName: AUTH_TOKEN,\n  persisting: false,\n  websocketsOnly: false,\n  ssr: false,\n  cache: new InMemoryCache({\n    freezeResults: false\n  }),\n\n  getAuth: () => {\n    return 'Bearer ' + process.env.GIT_PUBLIC_TOKEN\n  }\n}\n\nexport function createProvider(options = {}) {\n  const { apolloClient, wsClient } = createApolloClient({\n    ...defaultOptions,\n    ...options\n  })\n  apolloClient.wsClient = wsClient\n\n  const apolloProvider = new VueApollo({\n    defaultClient: apolloClient,\n    defaultOptions: {\n      $query: {\n\n      }\n    },\n    errorHandler(error) {\n      console.log('[Error-Apollo]' + error);\n    }\n  })\n\n  return apolloProvider\n}\n"]}]}